# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node CI with NPM

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:
    branches:
      - master
      - "release/**"
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 21.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-
      - name: Install dependencies
        run: npm ci
      - name: Run linter over tests
        run: npx prettier -c test/**/*.ts
      - name: Run integration tests with NPM
        if: ${{ matrix.node-version == '16.x' &&
          github.repository_owner == 'onfido' }}
        run: npm test -- -i
        env:
          ONFIDO_API_TOKEN: ${{ secrets.ONFIDO_API_TOKEN }}
          ONFIDO_SAMPLE_APPLICANT_ID: ${{ secrets.ONFIDO_SAMPLE_APPLICANT_ID }}
          ONFIDO_SAMPLE_VIDEO_ID_1: ${{ secrets.ONFIDO_SAMPLE_VIDEO_ID_1 }}
          ONFIDO_SAMPLE_VIDEO_ID_2: ${{ secrets.ONFIDO_SAMPLE_VIDEO_ID_2 }}
          ONFIDO_SAMPLE_MOTION_ID_1: ${{ secrets.ONFIDO_SAMPLE_MOTION_ID_1 }}
          ONFIDO_SAMPLE_MOTION_ID_2: ${{ secrets.ONFIDO_SAMPLE_MOTION_ID_2 }}

  publish-npm:
    runs-on: ubuntu-latest

    needs: integration-tests
    environment: delivery
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npm ci
      - name: Build and publish package
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
      - name: Update CHANGELOG.md
        run: |
          TMP_FILE=$(mktemp)

          RELEASE_VERSION=$(jq -r '.release' .release.json)
          RELEASE_DATE=`date +'%dth %B %Y' | sed -E 's/^0//;s/^([2,3]?)1th/\11st/;s/^([2]?)2th/\12nd/;s/^([2]?)3th/\13rd/'`

          SPEC_COMMIT_SHA=$(jq -r '.source.short_sha' .release.json)
          SPEC_COMMIT_URL=$(jq -r '.source.repo_url + "/commit/" + .source.long_sha' .release.json)
          SPEC_RELEASE_VERSION=$(jq -r '.source.version' .release.json)
          SPEC_RELEASE_URL=$(jq -r '.source.repo_url + "/releases/tag/" + .source.version' .release.json)

          echo -e "# Changelog\n\n## $RELEASE_VERSION $RELEASE_DATE\n\n" >| $TMP_FILE
          echo -en "${{ github.event.release.body }}\nBased on Onfido OpenAPI spec " >> $TMP_FILE

          if [ -z $SPEC_RELEASE_VERSION ]; then
            echo "up to commit [$SPEC_COMMIT_SHA](${SPEC_COMMIT_URL})." >> $TMP_FILE
          else
            echo "version [$SPEC_RELEASE_VERSION](${SPEC_RELEASE_URL})." >> $TMP_FILE
          fi

          grep -v "^# Changelog" CHANGELOG.md >> $TMP_FILE
          mv $TMP_FILE CHANGELOG.md

          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git commit -m "Update CHANGELOG.md after library release" CHANGELOG.md
          git push
